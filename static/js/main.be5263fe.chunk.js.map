{"version":3,"sources":["components/header.js","utils/API.js","components/Container.js","App.js","index.js"],"names":["Header","className","userList","axios","get","Container","state","users","search","directionOfSort","col","searchChangeHandler","e","setState","target","value","renderUsers","usersFiltered","sort","sortUsers","map","user","index","src","image","alt","first","last","email","Date","dob","toDateString","grabHeaderClassName","handleSortDirectionChange","a","b","API","then","res","userArray","data","results","name","date","picture","medium","catch","err","console","log","this","toLowerCase","filter","includes","onChange","type","placeholder","aria-label","aria-describedby","scope","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iQAceA,MAXf,WACI,OACI,qBAAKC,UAAU,wCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,YAAd,SAA0B,+D,iDCD3B,OAAEC,SAJjB,WACI,OAAOC,IAAMC,IAAI,mDC4INC,E,4MAzIXC,MAAQ,CACJC,MAAO,GACPC,OAAQ,GACRC,gBAAiB,GACjBC,IAAK,I,EAsBTC,oBAAsB,SAAAC,GAClB,EAAKC,SAAS,CAAEL,OAAQI,EAAEE,OAAOC,S,EAcrCC,YAAc,WACV,OAAO,EAAKC,gBACPC,KAAK,EAAKC,WACVC,KAAI,SAACC,EAAMC,GACR,OACI,+BACI,6BAAI,qBAAKC,IAAKF,EAAKG,MAAOC,IAAI,WAC9B,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,OACV,6BAAKN,EAAKO,QACV,6BAAK,IAAIC,KAAKR,EAAKS,KAAKC,mBALnBT,O,EAYzBU,oBAAsB,SAAAtB,GAClB,OAAO,EAAKJ,MAAMI,MAAQA,EAAnB,oBACY,EAAKJ,MAAMG,iBADvB,a,EAMXwB,0BAA4B,SAAAvB,GACxB,EAAKJ,MAAMI,MAAQA,GAAsC,cAA/B,EAAKJ,MAAMG,gBAC/B,EAAKI,SAAS,CAAEJ,gBAAiB,aAAcC,IAAKA,IACpD,EAAKG,SAAS,CAAEJ,gBAAiB,YAAaC,IAAKA,K,EAI7DS,UAAY,SAACe,EAAGC,GACZ,OAAID,EAAE,EAAK5B,MAAMI,KAAOyB,EAAE,EAAK7B,MAAMI,KACK,cAA/B,EAAKJ,MAAMG,iBAAmC,EAAI,EAClDyB,EAAE,EAAK5B,MAAMI,KAAOyB,EAAE,EAAK7B,MAAMI,KACF,cAA/B,EAAKJ,MAAMG,gBAAkC,GAAK,EAEtD,G,uDAtEX,WAAqB,IAAD,OAChB2B,EAAIlC,WACCmC,MAAK,SAAAC,GACF,IAAMC,EAAYD,EAAIE,KAAKC,QAAQrB,KAAI,SAAAC,GACnC,MAAO,CACHK,MAAOL,EAAKqB,KAAKhB,MACjBC,KAAMN,EAAKqB,KAAKf,KAChBC,MAAOP,EAAKO,MACZE,IAAKT,EAAKS,IAAIa,KACdnB,MAAOH,EAAKuB,QAAQC,WAG5B,EAAKhC,SAAS,CAAEN,MAAOgC,OAE1BO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,2BASlC,WACI,IAAMvC,EAAS0C,KAAK5C,MAAME,OAAO2C,cACjC,OAAOD,KAAK5C,MAAMC,MAAM6C,QAAO,SAAA/B,GAC3B,OACIA,EAAKK,MAAMyB,cAAcE,SAAS7C,IAAWa,EAAKM,KAAKwB,cAAcE,SAAS7C,Q,oBA+C1F,WAAU,IAAD,OACL,OACI,qCACI,sBAAKP,UAAU,qCAAf,UACI,qBAAKA,UAAU,wBACf,uBAAOqD,SAAUJ,KAAKvC,oBAClB4C,KAAK,SACLtD,UAAU,mBACVuD,YAAY,eACZC,aAAW,YACXC,mBAAiB,oBAGzB,qBAAKzD,UAAU,YAAf,SACI,wBAAOA,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAI0D,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,SACI,sBACI1D,UAAWiD,KAAKlB,oBAAoB,SACpC4B,QAAS,WACL,EAAK3B,0BAA0B,UAHvC,qBAMJ,oBAAI0B,MAAM,MAAV,SACI,sBACI1D,UAAWiD,KAAKlB,oBAAoB,QACpC4B,QAAS,kBAAM,EAAK3B,0BAA0B,SAFlD,oBAKJ,oBAAI0B,MAAM,MAAV,SACI,sBACI1D,UAAWiD,KAAKlB,oBAAoB,SACpC4B,QAAS,kBAAM,EAAK3B,0BAA0B,UAFlD,qBAKJ,oBAAI0B,MAAM,MAAV,SACI,sBACI1D,UAAWiD,KAAKlB,oBAAoB,OACpC4B,QAAS,kBAAM,EAAK3B,0BAA0B,QAFlD,wBAQZ,gCAAQiB,KAAKlC,4B,GAlIb6C,IAAMC,W,MCUfC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCHNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be5263fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid text-center\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-3\"><strong>Employee Directory</strong></h1>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nfunction userList() {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=US\");\r\n}\r\n\r\nexport default { userList };","import React from 'react';\r\nimport API from \"../utils/API\";\r\nimport \"./style.css\";\r\n\r\nclass Container extends React.Component {\r\n    // initial state to use\r\n    state = {\r\n        users: [],\r\n        search: \"\",\r\n        directionOfSort: \"\",\r\n        col: \"\"\r\n    };\r\n\r\n    // send get request to grab users after component ,ount, then push into array from state via map method\r\n    componentDidMount() {\r\n        API.userList()\r\n            .then(res => {\r\n                const userArray = res.data.results.map(user => {\r\n                    return {\r\n                        first: user.name.first,\r\n                        last: user.name.last,\r\n                        email: user.email,\r\n                        dob: user.dob.date,\r\n                        image: user.picture.medium\r\n                    };\r\n                });\r\n                this.setState({ users: userArray });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // updating state via letter input\r\n    searchChangeHandler = e => {\r\n        this.setState({ search: e.target.value });\r\n    };\r\n\r\n    // filter users to show up by letter typed in search\r\n    usersFiltered() {\r\n        const search = this.state.search.toLowerCase();\r\n        return this.state.users.filter(user => {\r\n            return (\r\n                user.first.toLowerCase().includes(search) || user.last.toLowerCase().includes(search)\r\n            );\r\n        });\r\n    }\r\n\r\n    // render users in table form\r\n    renderUsers = () => {\r\n        return this.usersFiltered()\r\n            .sort(this.sortUsers)\r\n            .map((user, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td><img src={user.image} alt=\"user\"></img></td>\r\n                        <td>{user.first}</td>\r\n                        <td>{user.last}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{new Date(user.dob).toDateString()}</td>\r\n                    </tr>\r\n                );\r\n            });\r\n    };\r\n\r\n    // add or remove arrow via column\r\n    grabHeaderClassName = col => {\r\n        return this.state.col === col\r\n            ? `clickable ${this.state.directionOfSort}`\r\n            : `clickable`;\r\n    };\r\n\r\n    // changing to opposite sorting direction via column and state\r\n    handleSortDirectionChange = col => {\r\n        this.state.col === col && this.state.directionOfSort === \"ascending\"\r\n            ? this.setState({ directionOfSort: \"descending\", col: col })\r\n            : this.setState({ directionOfSort: \"ascending\", col: col });\r\n    };\r\n\r\n    // return 1 or -1 depending on direction of sorting handler\r\n    sortUsers = (a, b) => {\r\n        if (a[this.state.col] < b[this.state.col]) {\r\n            return this.state.directionOfSort === \"ascending\" ? -1 : 1;\r\n        } else if (a[this.state.col] > b[this.state.col]) {\r\n            return this.state.directionOfSort === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    //rendering container with users along with searchbar\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"input-group justify-content-center\">\r\n                    <div className=\"input-group-prepend\"></div>\r\n                    <input onChange={this.searchChangeHandler}\r\n                        type=\"search\"\r\n                        className=\"form-control m-3\"\r\n                        placeholder=\"Search Users\"\r\n                        aria-label=\"SearchBox\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                    />\r\n                </div>\r\n                <div className=\"table m-3\">\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Image</th>\r\n                                <th scope=\"col\">\r\n                                    <span\r\n                                        className={this.grabHeaderClassName(\"first\")}\r\n                                        onClick={() => {\r\n                                            this.handleSortDirectionChange(\"first\");\r\n                                        }}>First</span>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <span\r\n                                        className={this.grabHeaderClassName(\"last\")}\r\n                                        onClick={() => this.handleSortDirectionChange(\"last\")}>Last\r\n                                    </span>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <span\r\n                                        className={this.grabHeaderClassName(\"email\")}\r\n                                        onClick={() => this.handleSortDirectionChange(\"email\")}>Email\r\n                                    </span>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <span\r\n                                        className={this.grabHeaderClassName(\"dob\")}\r\n                                        onClick={() => this.handleSortDirectionChange(\"dob\")}>DOB\r\n                                    </span>\r\n                                </th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{this.renderUsers()}</tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Container;","import React from 'react';\nimport Header from './components/header';\nimport Container from './components/Container';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}